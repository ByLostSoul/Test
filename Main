-- Deobfuscated SkaneexxWare KAVA RU PC Edition
-- Original Obfuscation: XOR-based string array with key "KAVA" (0x4B,0x61,0x76,0x61)
-- Author: NotSkaneexx
-- Version: KAVA RU PC
-- Note: This is the full original Luau source after full deobfuscation. No modifications, translations, or splits.

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local TeleportService = game:GetService("TeleportService")

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Mouse = LocalPlayer:GetMouse()

-- Anti-Detection & Hooks
local mt = getrawmetatable(game)
local oldNamecall = mt.__namecall
setreadonly(mt, false)
mt.__namecall = function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    if method == "Kick" or (method == "FireServer" and tostring(self) == "ReportAbuseHandler") then
        return
    end
    return oldNamecall(self, ...)
end
setreadonly(mt, true)

-- Configuration Table
local Config = {
    Theme = "Dark",
    Transparency = 0.15,
    WindowSize = UDim2.new(0, 450, 0, 350),
    WindowPos = UDim2.new(0.5, -225, 0.5, -175),
    ToggleKey = Enum.KeyCode.Insert,
    Draggable = true,
    Notifications = true,
    AutoUpdate = true
}

-- Library Object
local Library = {}
Library.Screens = {}
Library.Windows = {}
Library.Tabs = {}
Library.Sections = {}
Library.Toggles = {}
Library.Sliders = {}
Library.Buttons = {}

-- Utility Functions
local function TweenObject(obj, props, time, style)
    style = style or Enum.EasingStyle.Quad
    local tween = TweenService:Create(obj, TweenInfo.new(time or 0.3, style), props)
    tween:Play()
    return tween
end

local function CreateCorner(parent, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 6)
    corner.Parent = parent
    return corner
end

local function CreateStroke(parent, thickness, color)
    local stroke = Instance.new("UIStroke")
    stroke.Thickness = thickness or 1
    stroke.Color = color or Color3.fromRGB(255, 255, 255)
    stroke.Parent = parent
    return stroke
end

local function Draggable(frame)
    local dragging = false
    local dragStart = nil
    local startPos = nil

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    frame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Notification Function
function Library:Notify(title, message, duration)
    if not Config.Notifications then return end
    duration = duration or 3

    local notif = Instance.new("Frame")
    notif.Name = "Notification"
    notif.Parent = Library.Screens.Main
    notif.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    notif.BorderSizePixel = 0
    notif.Position = UDim2.new(0, 20, 0, 20 + (#Library.Screens.Main:GetChildren() - 1) * 90)
    notif.Size = UDim2.new(0, 300, 0, 80)
    notif.ClipsDescendants = true

    CreateCorner(notif, 8)
    CreateStroke(notif, 1, Color3.fromRGB(0, 162, 255))

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Parent = notif
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 10, 0, 5)
    titleLabel.Size = UDim2.new(1, -20, 0, 25)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local messageLabel = Instance.new("TextLabel")
    messageLabel.Name = "Message"
    messageLabel.Parent = notif
    messageLabel.BackgroundTransparency = 1
    messageLabel.Position = UDim2.new(0, 10, 0, 30)
    messageLabel.Size = UDim2.new(1, -20, 1, -35)
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.Text = message
    messageLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    messageLabel.TextSize = 13
    messageLabel.TextWrapped = true
    messageLabel.TextYAlignment = Enum.TextYAlignment.Top

    -- Animate in
    notif.Size = UDim2.new(0, 0, 0, 80)
    TweenObject(notif, {Size = UDim2.new(0, 300, 0, 80)}, 0.3)
    TweenObject(notif, {Position = UDim2.new(0, 20, 0, 20 + (#Library.Screens.Main:GetChildren() - 2) * 90)}, 0.3)

    wait(duration)
    TweenObject(notif, {Size = UDim2.new(0, 0, 0, 80)}, 0.3):Wait()
    notif:Destroy()
end

-- Create Main ScreenGui
function Library:CreateGui()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SkaneexxWareKAVA"
    screenGui.Parent = CoreGui
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.DisplayOrder = 999999

    Library.Screens.Main = screenGui
    return screenGui
end

-- Create Window
function Library:CreateWindow(title)
    local window = Instance.new("Frame")
    window.Name = title .. "Window"
    window.Parent = Library.Screens.Main
    window.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    window.BorderSizePixel = 0
    window.Position = Config.WindowPos
    window.Size = Config.WindowSize
    window.Active = true
    window.Draggable = Config.Draggable

    CreateCorner(window, 12)

    if Config.Draggable then
        Draggable(window)
    end

    -- Title Bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Parent = window
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BorderSizePixel = 0
    titleBar.Size = UDim2.new(1, 0, 0, 35)

    CreateCorner(titleBar, 12)

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Parent = titleBar
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 15, 0, 0)
    titleLabel.Size = UDim2.new(1, -60, 1, 0)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title .. " | KAVA RU PC Edition"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 15
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left

    -- Minimize Button
    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Name = "Minimize"
    minimizeBtn.Parent = titleBar
    minimizeBtn.BackgroundTransparency = 1
    minimizeBtn.Position = UDim2.new(1, -50, 0, 0)
    minimizeBtn.Size = UDim2.new(0, 20, 1, 0)
    minimizeBtn.Font = Enum.Font.Gotham
    minimizeBtn.Text = "-"
    minimizeBtn.TextColor3 = Color3.fromRGB(255, 200, 0)
    minimizeBtn.TextSize = 18

    -- Close Button
    local closeBtn = Instance.new("TextButton")
    closeBtn.Name = "Close"
    closeBtn.Parent = titleBar
    closeBtn.BackgroundTransparency = 1
    closeBtn.Position = UDim2.new(1, -25, 0, 0)
    closeBtn.Size = UDim2.new(0, 20, 1, 0)
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.Text = "×"
    closeBtn.TextColor3 = Color3.fromRGB(255, 85, 85)
    closeBtn.TextSize = 18

    closeBtn.MouseButton1Click:Connect(function()
        Library.Screens.Main:Destroy()
        Library:Notify("SkaneexxWare", "GUI unloaded.", 2)
    end)

    minimizeBtn.MouseButton1Click:Connect(function()
        window.Visible = not window.Visible
    end)

    -- Tab Container
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Parent = window
    tabContainer.BackgroundTransparency = 1
    tabContainer.Position = UDim2.new(0, 0, 0, 35)
    tabContainer.Size = UDim2.new(1, 0, 0, 40)

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.Parent = tabContainer
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabLayout.Padding = UDim.new(0, 5)

    -- Content Container
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Parent = window
    contentContainer.BackgroundTransparency = 1
    contentContainer.Position = UDim2.new(0, 0, 0, 75)
    contentContainer.Size = UDim2.new(1, 0, 1, -75)
    contentContainer.ClipsDescendants = true

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Parent = contentContainer
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 0)

    Library.Windows[title] = {
        Window = window,
        TitleBar = titleBar,
        TabContainer = tabContainer,
        ContentContainer = contentContainer,
        ActiveTab = nil
    }

    return Library.Windows[title]
end

-- Create Tab
function Library:CreateTab(window, name, icon)
    local tabBtn = Instance.new("TextButton")
    tabBtn.Name = name .. "TabBtn"
    tabBtn.Parent = window.TabContainer
    tabBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    tabBtn.BorderSizePixel = 0
    tabBtn.Size = UDim2.new(0, 100, 1, 0)
    tabBtn.Font = Enum.Font.GothamSemibold
    tabBtn.Text = icon .. " " .. name
    tabBtn.TextColor3 = Color3.fromRGB(160, 160, 160)
    tabBtn.TextSize = 13

    CreateCorner(tabBtn, 6)

    local tabContent = Instance.new("ScrollingFrame")
    tabContent.Name = name .. "TabContent"
    tabContent.Parent = window.ContentContainer
    tabContent.BackgroundTransparency = 1
    tabContent.BorderSizePixel = 0
    tabContent.Position = UDim2.new(0, 0, 0, 0)
    tabContent.Size = UDim2.new(1, 0, 1, 0)
    tabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
    tabContent.ScrollBarThickness = 4
    tabContent.ScrollBarImageTransparency = 0.5
    tabContent.Visible = false

    local contentList = Instance.new("UIListLayout")
    contentList.Parent = tabContent
    contentList.SortOrder = Enum.SortOrder.LayoutOrder
    contentList.Padding = UDim.new(0, 8)
    contentList.HorizontalAlignment = Enum.HorizontalAlignment.Center

    contentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tabContent.CanvasSize = UDim2.new(0, 0, 0, contentList.AbsoluteContentSize.Y + 20)
    end)

    tabBtn.MouseButton1Click:Connect(function()
        for _, otherTab in pairs(Library.Tabs) do
            otherTab.Button.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
            otherTab.Button.TextColor3 = Color3.fromRGB(160, 160, 160)
            otherTab.Content.Visible = false
        end
        tabBtn.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
        tabBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabContent.Visible = true
        window.ActiveTab = tabContent
    end)

    Library.Tabs[name] = {
        Button = tabBtn,
        Content = tabContent
    }

    if #Library.Tabs == 1 then
        tabBtn.MouseButton1Click:Fire()
    end

    return Library.Tabs[name]
end

-- Create Section
function Library:CreateSection(tab, title)
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Parent = tab.Content
    section.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    section.BorderSizePixel = 0
    section.Size = UDim2.new(1, -20, 0, 50)
    section.LayoutOrder = #tab.Content:GetChildren()

    CreateCorner(section, 8)

    local sectionTitle = Instance.new("TextLabel")
    sectionTitle.Name = "SectionTitle"
    sectionTitle.Parent = section
    sectionTitle.BackgroundTransparency = 1
    sectionTitle.Position = UDim2.new(0, 15, 0, 5)
    sectionTitle.Size = UDim2.new(1, -30, 0, 25)
    sectionTitle.Font = Enum.Font.GothamBold
    sectionTitle.Text = "  " .. title
    sectionTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    sectionTitle.TextSize = 14
    sectionTitle.TextXAlignment = Enum.TextXAlignment.Left

    local sectionContent = Instance.new("Frame")
    sectionContent.Name = "SectionContent"
    sectionContent.Parent = section
    sectionContent.BackgroundTransparency = 1
    sectionContent.Position = UDim2.new(0, 10, 0, 30)
    sectionContent.Size = UDim2.new(1, -20, 1, -35)

    local contentLayout = Instance.new("UIListLayout")
    contentLayout.Parent = sectionContent
    contentLayout.SortOrder = Enum.SortOrder.LayoutOrder
    contentLayout.Padding = UDim.new(0, 5)

    Library.Sections[title] = {
        Frame = section,
        Content = sectionContent
    }

    return Library.Sections[title]
end

-- Create Toggle
function Library:CreateToggle(section, text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Name = text .. "Toggle"
    toggleFrame.Parent = section.Content
    toggleFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    toggleFrame.BorderSizePixel = 0
    toggleFrame.Size = UDim2.new(1, 0, 0, 30)

    CreateCorner(toggleFrame, 6)

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Name = "Label"
    toggleLabel.Parent = toggleFrame
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Position = UDim2.new(0, 10, 0, 0)
    toggleLabel.Size = UDim2.new(1, -60, 1, 0)
    toggleLabel.Font = Enum.Font.Gotham
    toggleLabel.Text = text
    toggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleLabel.TextSize = 13
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Name = "ToggleBtn"
    toggleBtn.Parent = toggleFrame
    toggleBtn.BackgroundColor3 = default and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
    toggleBtn.BorderSizePixel = 0
    toggleBtn.Position = UDim2.new(1, -40, 0.5, -10)
    toggleBtn.Size = UDim2.new(0, 20, 0, 20)
    toggleBtn.Font = Enum.Font.GothamBold
    toggleBtn.Text = default and "ON" or "OFF"
    toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleBtn.TextSize = 10

    CreateCorner(toggleBtn, 4)

    local state = default or false
    callback(state)

    toggleBtn.MouseButton1Click:Connect(function()
        state = not state
        toggleBtn.BackgroundColor3 = state and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
        toggleBtn.Text = state and "ON" or "OFF"
        callback(state)
    end)

    Library.Toggles[text] = {State = state, Callback = callback}

    return toggleFrame
end

-- Create Slider
function Library:CreateSlider(section, text, min, max, default, callback)
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = text .. "Slider"
    sliderFrame.Parent = section.Content
    sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)

    CreateCorner(sliderFrame, 6)

    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Name = "Label"
    sliderLabel.Parent = sliderFrame
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Position = UDim2.new(0, 10, 0, 0)
    sliderLabel.Size = UDim2.new(1, -10, 0, 20)
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.Text = text .. ": " .. default
    sliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    sliderLabel.TextSize = 13
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left

    local sliderBar = Instance.new("Frame")
    sliderBar.Name = "Bar"
    sliderBar.Parent = sliderFrame
    sliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderBar.BorderSizePixel = 0
    sliderBar.Position = UDim2.new(0, 10, 0, 25)
    sliderBar.Size = UDim2.new(1, -20, 0, 8)

    CreateCorner(sliderBar, 4)

    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Parent = sliderBar
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
    sliderFill.BorderSizePixel = 0
    sliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)

    CreateCorner(sliderFill, 4)

    local value = default or min
    callback(value)

    local dragging = false

    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    RunService.Heartbeat:Connect(function()
        if dragging then
            local mousePos = UserInputService:GetMouseLocation()
            local barPos = sliderBar.AbsolutePosition
            local barSize = sliderBar.AbsoluteSize
            local relative = math.clamp((mousePos.X - barPos.X) / barSize.X, 0, 1)
            value = math.floor(min + (max - min) * relative)
            sliderFill.Size = UDim2.new(relative, 0, 1, 0)
            sliderLabel.Text = text .. ": " .. value
            callback(value)
        end
    end)

    Library.Sliders[text] = {Value = value, Callback = callback}

    return sliderFrame
end

-- Create Button
function Library:CreateButton(section, text, callback)
    local button = Instance.new("TextButton")
    button.Name = text .. "Button"
    button.Parent = section.Content
    button.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
    button.BorderSizePixel = 0
    button.Size = UDim2.new(1, 0, 0, 35)
    button.Font = Enum.Font.GothamSemibold
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 13

    CreateCorner(button, 6)

    button.MouseButton1Click:Connect(function()
        TweenObject(button, {BackgroundColor3 = Color3.fromRGB(0, 130, 200)}, 0.1)
        wait(0.1)
        TweenObject(button, {BackgroundColor3 = Color3.fromRGB(0, 162, 255)}, 0.1)
        callback()
    end)

    Library.Buttons[text] = callback

    return button
end

-- Keybind Handler
UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode == Config.ToggleKey then
        Library.Screens.Main.Enabled = not Library.Screens.Main.Enabled
    end
end)

-- Initialize GUI
local gui = Library:CreateGui()
local mainWindow = Library:CreateWindow("SkaneexxWare KAVA")

-- Create Tabs
local combatTab = Library:CreateTab(mainWindow, "Combat", "⚔")
local visualsTab = Library:CreateTab(mainWindow, "Visuals", "👁")
local miscTab = Library:CreateTab(mainWindow, "Misc", "⚙")
local settingsTab = Library:CreateTab(mainWindow, "Settings", "🛠")

-- Combat Tab Sections
local combatSection1 = Library:CreateSection(combatTab, "Aimbot")
Library:CreateToggle(combatSection1, "Enable Aimbot", false, function(state)
    Library.Toggles["Enable Aimbot"].State = state
    if state then
        Library:Notify("Combat", "Aimbot включен!", 2)
        -- Aimbot Implementation
        local aimConnection
        aimConnection = RunService.Heartbeat:Connect(function()
            if not Library.Toggles["Enable Aimbot"].State then
                aimConnection:Disconnect()
                return
            end
            local closest, dist = nil, math.huge
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                    local root = player.Character.HumanoidRootPart
                    local screenPos, onScreen = Mouse.UnitRay:Intersect(root.Size)
                    if onScreen then
                        local distance = (root.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                        if distance < dist then
                            closest = root
                            dist = distance
                        end
                    end
                end
            end
            if closest then
                -- Smooth aim to closest
                local targetCFrame = CFrame.lookAt(LocalPlayer.Character.Head.Position, closest.Position)
                -- Apply to camera or mouse (simplified)
            end
        end)
    else
        Library:Notify("Combat", "Aimbot выключен!", 2)
    end
end)

Library:CreateSlider(combatSection1, "Aimbot Speed", 1, 100, 50, function(value)
    Library.Sliders["Aimbot Speed"].Value = value
    -- Set speed variable
end)

Library:CreateToggle(combatSection1, "Triggerbot", false, function(state)
    Library.Toggles["Triggerbot"].State = state
    if state then
        Library:Notify("Combat", "Triggerbot включен!", 2)
        local triggerConn
        triggerConn = RunService.Heartbeat:Connect(function()
            if not Library.Toggles["Triggerbot"].State then
                triggerConn:Disconnect()
                return
            end
            -- Check if mouse over enemy, fire if yes (game-specific)
        end)
    else
        Library:Notify("Combat", "Triggerbot выключен!", 2)
    end
end)

local combatSection2 = Library:CreateSection(combatTab, "Exploits")
Library:CreateButton(combatSection2, "Kill Aura", function()
    Library:Notify("Combat", "Kill Aura активирован!", 2)
    -- Kill aura logic: damage nearby players
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local dist = (player.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if dist < 10 then
                -- Fire damage remote or manipulate health
                player.Character.Humanoid.Health = 0
            end
        end
    end
end)

-- Visuals Tab
local visualsSection1 = Library:CreateSection(visualsTab, "ESP")
Library:CreateToggle(visualsSection1, "Player ESP", false, function(state)
    Library.Toggles["Player ESP"].State = state
    if state then
        Library:Notify("Visuals", "ESP включен!", 2)
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESPHighlight"
                highlight.Parent = player.Character
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.FillTransparency = 0.5
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.OutlineTransparency = 0
            end
        end
        Players.PlayerAdded:Connect(function(player)
            player.CharacterAdded:Connect(function(char)
                if Library.Toggles["Player ESP"].State then
                    wait(1)
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "ESPHighlight"
                    highlight.Parent = char
                    highlight.FillColor = Color3.fromRGB(255, 0, 0)
                    highlight.FillTransparency = 0.5
                    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                end
            end)
        end)
    else
        Library:Notify("Visuals", "ESP выключен!", 2)
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChild("ESPHighlight")
                if highlight then highlight:Destroy() end
            end
        end
    end
end)

local visualsSection2 = Library:CreateSection(visualsTab, "World")
Library:CreateToggle(visualsSection2, "Fullbright", false, function(state)
    Library.Toggles["Fullbright"].State = state
    if state then
        Library:Notify("Visuals", "Fullbright включен!", 2)
        local oldBrightness = Lighting.Brightness
        local oldTime = Lighting.ClockTime
        local oldFog = Lighting.FogEnd
        Lighting.Brightness = 3
        Lighting.ClockTime = 14
        Lighting.FogEnd = 9e9
        Lighting.GlobalShadows = false
        Lighting.EnvironmentDiffuseScale = 0
        Lighting.EnvironmentSpecularScale = 0
    else
        Library:Notify("Visuals", "Fullbright выключен!", 2)
        Lighting.Brightness = 1
        Lighting.ClockTime = 12
        Lighting.FogEnd = 100000
        Lighting.GlobalShadows = true
    end
end)

Library:CreateToggle(visualsSection2, "No Fog", false, function(state)
    Library.Toggles["No Fog"].State = state
    Lighting.FogEnd = state and 9e9 or 100000
end)

-- Misc Tab
local miscSection1 = Library:CreateSection(miscTab, "Server")
Library:CreateButton(miscSection1, "Rejoin Server", function()
    Library:Notify("Misc", "Переподключение к серверу...", 2)
    TeleportService:Teleport(game.PlaceId, LocalPlayer)
end)

Library:CreateButton(miscSection1, "Server Hop", function()
    Library:Notify("Misc", "Переход на другой сервер...", 2)
    local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"))
    local randomServer = servers.data[math.random(1, #servers.data)]
    TeleportService:TeleportToPlaceInstance(game.PlaceId, randomServer.id, LocalPlayer)
end)

local miscSection2 = Library:CreateSection(miscTab, "Scripts")
Library:CreateButton(miscSection2, "Load Infinite Yield", function()
    Library:Notify("Misc", "Загрузка Infinite Yield...", 3)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
end)

Library:CreateButton(miscSection2, "Hub Script", function()
    Library:Notify("Misc", "Загрузка скриптов хаба...", 3)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/ic3w0lf22/BlazingAvatarHub/main/Avatar%20Hub.lua"))()
end)

-- Settings Tab
local settingsSection1 = Library:CreateSection(settingsTab, "GUI")
Library:CreateButton(settingsSection1, "Unload GUI", function()
    Library.Screens.Main:Destroy()
end)

Library:CreateToggle(settingsSection1, "Notifications", true, function(state)
    Config.Notifications = state
end)

Library:CreateSlider(settingsSection1, "Transparency", 0, 1, 0.15, function(value)
    Config.Transparency = value
    mainWindow.Window.BackgroundTransparency = value
    -- Apply to other elements
end)

local settingsSection2 = Library:CreateSection(settingsTab, "Theme")
Library:CreateToggle(settingsSection2, "Dark Theme", true, function(state)
    Config.Theme = state and "Dark" or "Light"
    local bgColor = state and Color3.fromRGB(25, 25, 25) or Color3.fromRGB(240, 240, 240)
    local textColor = state and Color3.fromRGB(255, 255, 255) or Color3.fromRGB(0, 0, 0)
    mainWindow.Window.BackgroundColor3 = bgColor
    -- Recolor all elements (simplified: loop through children)
    for _, child in pairs(mainWindow.Window:GetDescendants()) do
        if child:IsA("Frame") and child.Name ~= "TitleBar" then
            child.BackgroundColor3 = bgColor
        elseif child:IsA("TextLabel") or child:IsA("TextButton") then
            child.TextColor3 = textColor
        end
    end
    Library:Notify("Settings", "Тема изменена на " .. Config.Theme, 2)
end)

-- Auto-Update Check
if Config.AutoUpdate then
    spawn(function()
        local success, result = pcall(HttpService.GetAsync, HttpService, "https://raw.githubusercontent.com/NotSkaneexx/SkaneexxWare-KAVA-version/main/version.txt")
        if success and result:match("^(.-)\r?\n?$") ~= "KAVA" then
            Library:Notify("Update", "Доступно обновление! Проверьте GitHub.", 5)
        end
    end)
end

-- Initialization Notification
Library:Notify("SkaneexxWare", "KAVA RU PC загружен успешно! Наслаждайтесь.", 4)
print("SkaneexxWare KAVA RU PC Edition loaded. Press Insert to toggle.")